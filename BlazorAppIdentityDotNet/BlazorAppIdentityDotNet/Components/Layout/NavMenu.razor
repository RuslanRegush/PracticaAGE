@implements IDisposable
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@* <input type="checkbox" title="Navigation menu" class="navbar-toggler" /> *@

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Acasă
            </NavLink>
        </div>





        <AuthorizeView>
            <Authorized>
                @if(isAdmin == true){
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="cereres">
                            <span class="bi bi-lock-nav-menu" aria-hidden="true"></span>Administrare
                        </NavLink>
                    </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="cererea">
                        <span class="bi bi-lock-nav-menu" aria-hidden="true"></span>Cerere
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="/account/logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="/" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Logare
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool isAdmin=false;
    private string? currentUrl;
    public string userName;
    public string userRole;
    protected override async Task OnInitializedAsync()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAdmin = user.IsInRole("Admin");
        userName = string.Concat(user.FindFirst(c => c.Type == "FirstName")?.Value ?? "Anonim");
        userRole = string.Concat(user.FindFirst(c => c.Type == "Role")?.Value ?? "Anonim");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
    public void ChangeLanguage()
    {
        
    }
}

