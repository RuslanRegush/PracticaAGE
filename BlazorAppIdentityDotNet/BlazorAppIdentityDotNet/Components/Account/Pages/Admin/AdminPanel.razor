@page "/admin"
@attribute [Authorize(Roles = "Admin")]
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using BlazorAppIdentityDotNet.Data
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@rendermode InteractiveServer

<PageTitle>Pagina Admin</PageTitle>

<h1>Adaugare unui nou administrator</h1>

<p>Introduceți email-ul utilizatorului, pe care doriți să îl faceți admin:</p>

<InputText @bind-Value="email" />
<button @onclick="MakeAdmin" class="btn btn-primary">Adaugă admin</button>

@if (!string.IsNullOrEmpty(message))
{
    <p style="color: green">@message</p>
}
<p></p>
<button @onclick="LinkToList" class="btn btn-primary">Lista cererilor</button>
@code {
    private string email;
    private string message;
    private void LinkToList(){
        NavigationManager.NavigateTo("/cereres");
    }
    private async Task MakeAdmin()
    {
        var user = await UserManager.FindByEmailAsync(email);
        if (user != null)
        {
            if (!await UserManager.IsInRoleAsync(user, "Admin"))
            {
                await UserManager.AddToRoleAsync(user, "Admin");
                message = "User is now an Admin!";
            }
            else
            {
                message = "User is already an Admin.";
            }
        }
        else
        {
            message = "User not found.";
        }
    }
}
