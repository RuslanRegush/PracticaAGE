@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using BlazorAppIdentityDotNet.Data
@using Microsoft.AspNetCore.WebUtilities
@using System.Text

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resetarea parolei</PageTitle>

<h1>Ați uitat parola?</h1>
<h2>Introduceți email-ul.</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="" />
                <label for="Input.Email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Resetarea parolei</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null)
        {
            // Dacă utilizatorul nu există, arată mesaj de eroare sau redirecționează
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }
        else
        {
            // Redirecționează utilizatorul către pagina de resetare a parolei
            var code = await UserManager.GeneratePasswordResetTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            var callbackUrl = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
                new Dictionary<string, object?> { ["code"] = code });

            // Folosește un cod simplu pentru resetare sau salvează-l pe un backend, după preferințe
            NavigationManager.NavigateTo($"Account/ResetPassword?code={code}");
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Introduceți email-ul")]
        [EmailAddress(ErrorMessage ="Email-ul nu este valid")]
        public string Email { get; set; } = "";
    }
}
