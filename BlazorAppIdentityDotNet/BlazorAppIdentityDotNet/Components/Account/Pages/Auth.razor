@page "/cererea"
@using Microsoft.EntityFrameworkCore
@using BlazorAppIdentityDotNet.Data.Models
@inject NavigationManager NavigationManager
@inject IDbContextFactory<BlazorAppIdentityDotNet.Data.ApplicationDbContext> DbFactory
@inject AuthenticationStateProvider AuthenticationStateProvider

@rendermode InteractiveServer

<PageTitle>Cerere</PageTitle>
<h2>Sunteți logat ca: @UserName</h2>
<p></p>
@if (Cerere == null)
{
    <button type="button" class="btn btn-primary" @onclick="LinkToCreateCerere">Cerere nouă</button>
}
else
{
    <div>
        <p>
            <strong>Stare cerere: </strong>
            @Cerere.State
        </p>

        @if (!string.IsNullOrEmpty(Cerere.Message))
        {
            <p><strong>Cauza respingerii:</strong> @Cerere.Message</p>
        }
    </div>
    <button type="button" class="btn btn-primary" @onclick="LinkToEditCerere">Editează cererea</button>
}

@code {
    private Cerere? Cerere { get; set; }
    public string UserName = "";
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        try
        {
            using var context = DbFactory.CreateDbContext();

            // Obține cererea utilizatorului din DB folosind IDNP-ul salvat în autentificare
            //var userId = string.Concat(user.FindFirst(c => c.Type == "Username")?.Value ?? "");
            var userId = user.FindFirst(c => c.Type == "Username")?.Value ?? "";

            UserName = string.Concat(user.FindFirst(c => c.Type == "FirstName")?.Value ?? "Anonim");
            if (string.IsNullOrEmpty(userId))
            {
                Console.WriteLine("User ID not found.");
                return;
            }

            Cerere = await context.Cerere.FirstOrDefaultAsync(c => c.IDNP == userId);
            if (Cerere == null)
            {
                Console.WriteLine("No Cerere found for this user.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private void LinkToCreateCerere()
    {
        NavigationManager.NavigateTo("/cereres/create");
    }

    private void LinkToEditCerere()
    {
        if (Cerere != null)
        {
            NavigationManager.NavigateTo("/cereres/edit");
        }
        else
        {
            Console.WriteLine("Cerere is null, cannot navigate to edit.");
        }
    }
}
